{"ast":null,"code":"var _jsxFileName = \"/Users/autumn/moviely \\u110B\\u1169\\u1112\\u116E 2.30.27/src/pages/LoginPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport '../css/LoginPage.css';\nimport logoImage from '../logo.png';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const handleGoogleSuccess = async credentialResponse => {\n    const {\n      credential\n    } = credentialResponse;\n    console.log(\"Google Login Success, credential:\", credential);\n    try {\n      const res = await fetch('https://moviely.duckdns.org/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          token: credential\n        })\n      });\n      const data = await res.json();\n      console.log(\"Backend response data:\", data);\n      if (data.jwtToken) {\n        login(data.jwtToken, data.user);\n        navigate('/movie-select');\n      } else {\n        alert('로그인에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('Backend redirection failed:', error);\n      alert('백엔드 처리에 실패했습니다.');\n    }\n  };\n  const handleGoogleFailure = error => {\n    console.error('Google Login Failed:', error);\n    alert('Google 로그인에 실패했습니다.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"login-logo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoImage,\n        alt: \"Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC18C\\uC15C \\uB85C\\uADF8\\uC778 \\uBC0F \\uD68C\\uC6D0\\uAC00\\uC785\\uC73C\\uB85C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }, this), \"MOVIELY\\uC758 \\uBAA8\\uB4E0 \\uC11C\\uBE44\\uC2A4\\uB97C \\uC774\\uC6A9\\uD558\\uC2E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        onSuccess: handleGoogleSuccess,\n        onError: handleGoogleFailure\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"redirect-text\",\n        children: [\"\\uC544\\uC9C1 MOVIELY \\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          className: \"redirect-link\",\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uB7EC\\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"sN4LvqGaoySlBpnUspPencFbx08=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useNavigate","Link","GoogleLogin","logoImage","useAuth","jsxDEV","_jsxDEV","LoginPage","_s","navigate","login","handleGoogleSuccess","credentialResponse","credential","console","log","res","fetch","method","headers","body","JSON","stringify","token","data","json","jwtToken","user","alert","error","handleGoogleFailure","className","children","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onSuccess","onError","_c","$RefreshReg$"],"sources":["/Users/autumn/moviely 오후 2.30.27/src/pages/LoginPage.js"],"sourcesContent":["import React from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { GoogleLogin } from '@react-oauth/google';\nimport '../css/LoginPage.css'; \nimport logoImage from '../logo.png';\nimport { useAuth } from '../context/AuthContext';\n\nfunction LoginPage() {\n  const navigate = useNavigate();\n  const { login } = useAuth();\n\n  const handleGoogleSuccess = async (credentialResponse) => {\n    const { credential } = credentialResponse;\n\n    console.log(\"Google Login Success, credential:\", credential);\n\n    try {\n      const res = await fetch('https://moviely.duckdns.org/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ token: credential }),\n      });\n      const data = await res.json();\n\n      console.log(\"Backend response data:\", data);\n\n      if (data.jwtToken) {\n        login(data.jwtToken, data.user);\n        navigate('/movie-select'); \n      } else {\n        alert('로그인에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('Backend redirection failed:', error);\n      alert('백엔드 처리에 실패했습니다.');\n    }\n  };\n\n  const handleGoogleFailure = (error) => {\n    console.error('Google Login Failed:', error);\n    alert('Google 로그인에 실패했습니다.');\n  };\n\n  return (\n    <div className=\"loginPage\">\n      <Link to=\"/\" className=\"login-logo\">\n        <img src={logoImage} alt=\"Logo\" />\n      </Link>\n      <div className=\"loginBox\">\n        <h2>로그인 및 회원가입</h2>\n        <p>소셜 로그인 및 회원가입으로<br />MOVIELY의 모든 서비스를 이용하실 수 있습니다.</p>\n        <GoogleLogin\n          onSuccess={handleGoogleSuccess}\n          onError={handleGoogleFailure}\n        />\n        <p className=\"redirect-text\">\n          아직 MOVIELY 계정이 없으신가요? <Link to=\"/signup\" className=\"redirect-link\">회원가입하러가기</Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}